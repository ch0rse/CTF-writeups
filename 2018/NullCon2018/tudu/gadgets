Gadgets information
============================================================
0x0000000000400bee : adc al, 0xc5 ; and byte ptr [rax], spl ; ret
0x0000000000400bbd : adc eax, 0x83489066 ; ret 0x4808
0x000000000040097b : add al, 0x5b ; ret
0x0000000000400f9f : add bl, dh ; ret
0x0000000000400beb : add byte ptr [rax - 0x77], cl ; adc al, 0xc5 ; and byte ptr [rax], spl ; ret
0x0000000000400c69 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000400aaf : add byte ptr [rax - 0x7d], cl ; ret
0x000000000040118b : add byte ptr [rax], ah ; idiv bh ; call rax
0x0000000000400f9d : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400c67 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400aad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000401189 : add byte ptr [rax], al ; add byte ptr [rax], ah ; idiv bh ; call rax
0x0000000000400f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004008ac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400dbd : add byte ptr [rax], al ; add rsp, 0x218 ; ret
0x000000000040078b : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004011d2 : add byte ptr [rax], al ; cmp dl, 0xff ; call qword ptr [rax]
0x00000000004008ae : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400981 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004009fa : add byte ptr [rax], al ; ret
0x0000000000401186 : add byte ptr [rax], al ; sldt word ptr [rax] ; add byte ptr [rax], ah ; idiv bh ; call rax
0x0000000000400847 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000400cc5 : add byte ptr [rbp + 0x34], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000400918 : add byte ptr [rcx], al ; ret
0x0000000000401187 : add byte ptr [rdi], cl ; add byte ptr [rax], al ; add byte ptr [rax], ah ; idiv bh ; call rax
0x0000000000400a58 : add byte ptr [rdx - 0x2b], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400bcc : add dword ptr [rcx], edi ; enter -0x108b, 0x5b ; ret
0x0000000000400914 : add eax, 0x20171e ; add ebx, esi ; ret
0x0000000000400bca : add eax, 1 ; cmp eax, ecx ; jne 0x400bc8 ; pop rbx ; ret
0x00000000004013aa : add eax, dword ptr [rdi + 0xe] ; xor byte ptr [rdx], al ; ret
0x0000000000400919 : add ebx, esi ; ret
0x0000000000400975 : add edi, edi ; cmp byte ptr [rax], 0xa ; je 0x400988 ; pop rbx ; ret
0x0000000000400cc9 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004009f6 : add esp, 0x218 ; ret
0x0000000000400a5c : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040078e : add esp, 8 ; ret
0x0000000000400974 : add r15d, edi ; cmp byte ptr [rax], 0xa ; je 0x400989 ; pop rbx ; ret
0x0000000000400cc8 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004009f5 : add rsp, 0x218 ; ret
0x0000000000400a5b : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040078d : add rsp, 8 ; ret
0x00000000004008a2 : and byte ptr [rax], ah ; jmp rax
0x0000000000400bf1 : and byte ptr [rax], ah ; ret
0x0000000000400917 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000400b3a : and byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400bf0 : and byte ptr [rax], spl ; ret
0x00000000004011d7 : call qword ptr [rax]
0x000000000040139b : call qword ptr [rbx]
0x000000000040093e : call rax
0x0000000000400f24 : clc ; push qword ptr [rbp - 0x28] ; add rsp, 8 ; ret
0x0000000000400977 : cmp byte ptr [rax], 0xa ; je 0x400986 ; pop rbx ; ret
0x0000000000400978 : cmp byte ptr [rdx], cl ; je 0x400985 ; pop rbx ; ret
0x00000000004011d4 : cmp dl, 0xff ; call qword ptr [rax]
0x0000000000400f23 : cmp eax, 0xff ; jne 0x400f09 ; add rsp, 8 ; ret
0x0000000000400bcd : cmp eax, ecx ; jne 0x400bc5 ; pop rbx ; ret
0x0000000000400bce : enter -0x108b, 0x5b ; ret
0x0000000000400f7c : fmul qword ptr [rax - 0x7d] ; ret
0x000000000040118d : idiv bh ; call rax
0x0000000000400976 : inc dword ptr [rax + 0x4740a38] ; pop rbx ; ret
0x0000000000400939 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400a59 : jb 0x400a38 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040089d : je 0x4008b8 ; pop rbp ; mov edi, 0x602010 ; jmp rax
0x00000000004008eb : je 0x400900 ; pop rbp ; mov edi, 0x602010 ; jmp rax
0x0000000000400938 : je 0x400931 ; push rbp ; mov rbp, rsp ; call rax
0x000000000040097a : je 0x400983 ; pop rbx ; ret
0x00000000004011af : jmp qword ptr [rax]
0x00000000004008a5 : jmp rax
0x00000000004009f3 : jne 0x400a10 ; add rsp, 0x218 ; ret
0x0000000000400bcf : jne 0x400bc3 ; pop rbx ; ret
0x0000000000400cc6 : jne 0x400d04 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000400f26 : jne 0x400f06 ; add rsp, 8 ; ret
0x0000000000400980 : mov byte ptr [rax], 0 ; pop rbx ; ret
0x0000000000400913 : mov byte ptr [rip + 0x20171e], 1 ; ret
0x0000000000400bed : mov dword ptr [rax*8 + 0x602040], edx ; ret
0x0000000000400ae8 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400ad1 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040093c : mov ebp, esp ; call rax
0x00000000004008a0 : mov edi, 0x602010 ; jmp rax
0x0000000000400bec : mov qword ptr [rax*8 + 0x602040], rdx ; ret
0x0000000000400ae7 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400ad0 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040093b : mov rbp, rsp ; call rax
0x000000000040097f : nop ; mov byte ptr [rax], 0 ; pop rbx ; ret
0x00000000004008a8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000400f98 : nop dword ptr [rax + rax] ; ret
0x00000000004008f5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400a5e : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400979 : or dh, byte ptr [rsp + rax + 0x5b] ; ret
0x0000000000400bc9 : or eax, dword ptr [rbx - 0x37c6fe40] ; jne 0x400bc9 ; pop rbx ; ret
0x0000000000400bd0 : out dx, eax ; pop rbx ; ret
0x0000000000400f8c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400ad5 : pop r12 ; pop r13 ; ret
0x0000000000400f8e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400ad7 : pop r13 ; ret
0x0000000000400f90 : pop r14 ; pop r15 ; ret
0x0000000000400f92 : pop r15 ; ret
0x0000000000400912 : pop rbp ; mov byte ptr [rip + 0x20171e], 1 ; ret
0x000000000040089f : pop rbp ; mov edi, 0x602010 ; jmp rax
0x0000000000400f8b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400ad4 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400f8f : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004008b0 : pop rbp ; ret
0x0000000000400ae6 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400ad3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400a5f : pop rbx ; pop rbp ; ret
0x000000000040097c : pop rbx ; ret
0x0000000000400f93 : pop rdi ; ret
0x0000000000400f91 : pop rsi ; pop r15 ; ret
0x0000000000400f8d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400ad6 : pop rsp ; pop r13 ; ret
0x0000000000400f25 : push qword ptr [rbp - 0x28] ; add rsp, 8 ; ret
0x000000000040093a : push rbp ; mov rbp, rsp ; call rax
0x0000000000400791 : ret
0x0000000000400bc2 : ret 0x4808
0x0000000000400bcb : rol byte ptr [rcx], 0x39 ; enter -0x108b, 0x5b ; ret
0x0000000000400937 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x0000000000400ccb : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004009f8 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000401188 : sldt word ptr [rax] ; add byte ptr [rax], ah ; idiv bh ; call rax
0x0000000000400fa5 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400fa4 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004008aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400936 : test eax, eax ; je 0x400933 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400935 : test rax, rax ; je 0x400934 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400cc7 : xor al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004013ad : xor byte ptr [rdx], al ; ret
0x0000000000400849 : xor eax, eax ; add rsp, 8 ; ret

Unique gadgets found: 129
